import hi.db.*;
import otsu.hiNote.*;
import java.io.*;
import org.bson.Document;
public class Test {
   static void set_DB(hiMongo.DB db){
      hiU.out.println("---- famiryTree");
      db.in("famiryTree")
        .drop()
        .insertOne("{person_id:'P0001',name:'A',status:'-'    ,father:'-',mother:'-'}"
                  ,"{person_id:'P0002',name:'B',status:'-'    ,father:'-',mother:'-'}"
                  ,"{person_id:'P0003',name:'C',status:'KING' ,father:'-',mother:'-'}"
                  ,"{person_id:'P0004',name:'D',status:'QUEEN',father:'-',mother:'-'}"
                  ,"{person_id:'P0005',name:'B',status:'-'    ,father:'-',mother:'-'}"
                  ,"{person_id:'P0006',name:'E',status:'-'    ,father:'-',mother:'-'}"
                  ,"{person_id:'P0007',name:'E',status:'-'    ,father:'-',mother:'-'}"
                  ,"{person_id:'P0008',name:'F',status:'-'    ,father:'-',mother:'-'}"
                  //
                  ,"{person_id:'P0009',name:'G',status:'-'    ,father:'P0001',mother:'P0002'}"
                  ,"{person_id:'P0010',name:'H',status:'-'    ,father:'P0003',mother:'P0004'}" // M
                  ,"{person_id:'P0011',name:'I',status:'-'    ,father:'P0003',mother:'P0008'}" // M
                  ,"{person_id:'P0012',name:'J',status:'-'    ,father:'P0005',mother:'P0006'}"
                  ,"{person_id:'P0013',name:'K',status:'-'    ,father:'P0005',mother:'P0008'}"
                  ,"{person_id:'P0014',name:'L',status:'-'    ,father:'P0007',mother:'P0008'}"
                  ,"{person_id:'P0016',name:'M',status:'-'    ,father:'P0007',mother:'P0008'}"
                  //
                  ,"{person_id:'P0017',name:'O',status:'-'    ,father:'P0009',mother:'P0010'}" // F
                  ,"{person_id:'P0018',name:'P',status:'-'    ,father:'P0011',mother:'P0012'}" // M
                  ,"{person_id:'P0020',name:'Q',status:'-'    ,father:'P0013',mother:'P0014'}"
                  ,"{person_id:'P0021',name:'R',status:'-'    ,father:'P0013',mother:'P0014'}"
                  ,"{person_id:'P0022',name:'S',status:'-'    ,father:'P0009',mother:'P0016'}"
                  ,"{person_id:'P0024',name:'T',status:'-'    ,father:'P0009',mother:'P0016'}"
                  ,"{person_id:'P0025',name:'U',status:'-'    ,father:'P0009',mother:'P0016'}"
                   //
                  ,"{person_id:'P0027',name:'V',status:'-'    ,father:'P0017',mother:'P0020'}" // F
                  ,"{person_id:'P0028',name:'W',status:'-'    ,father:'P0021',mother:'P0018'}"
                  ,"{person_id:'P0029',name:'X',status:'-'    ,father:'P0025',mother:'P0024'}"
                  ,"{person_id:'P0030',name:'Y',status:'-'    ,father:'P0021',mother:'P0022'}"
                  ,"{person_id:'P0031',name:'Z',status:'-'    ,father:'P0021',mother:'P0022'}"
                  ,"{person_id:'P0032',name:'a',status:'-'    ,father:'P0011',mother:'P0020'}" // M
                  ,"{person_id:'P0033',name:'b',status:'-'    ,father:'P0025',mother:'P0024'}"
                  )
        .find("{}","{_id:0}")
        .forEachMson(Rm->hiU.out.println(Rm))
        ;
      hiU.out.println("---- friendLoop");
      db.in("friendLoop")
        .drop()
        .insertOne("{person_id:'P0028',friends:[P0027,P0030,P0032,P0033]}"
                  ,"{person_id:'P0029',friends:[P0028,P0031,P0033]}"
                  )
        .find("{}","{_id:0}")
        .forEachMson(Rm->hiU.out.println(Rm))
        ;
      }
   public static void main(String[] args_){
      //--------------------------------------------------------
      hiMongo.MoreMongo mongo;
      File _modeFile= new File("../test_workerMode.txt");
      if( _modeFile.exists() ) {
         String _host= hiFile.readTextAll(_modeFile).trim();
         if( _host.length()<5 ){
            mongo=new hiMongoCaller(new hiMongoWorker());
            hiU.out.println("// MODE: Caller/Worker");
            }
         else {
            mongo=new hiMongoCaller(new hiMonWorkerSample.COM(_host,8010,3));
            hiU.out.println("// MODE: call SERVER '"+_host+"'");
            }
         }
      else {
         mongo=new hiMongoDirect();
         hiU.out.println("// MODE: DIRECT");
         }
      //--------------------------------------------------------
      String _target="a";
      hiMongo.DB db= mongo.use("db01");
      set_DB(db);
      hiU.out.println("-------- check for '"+_target+"'");
      db.in("famiryTree")
        .find("{name:'"+_target+"'}")
        .forRecursive(
            "{#THIS.father:person_id,#THIS.mother:person_id}"
           ,"{#status:status,#name:name}"
           ,Fi->{
               if( "KING".equals(Fi.getValue("#status")) ) {
                  hiU.out.println(_target+" is a descendant of king "+Fi.getValue("#name"));
                  return _target+" is a descendant of king "+Fi.getValue("#name");
                  }
               return null;// さらに検索
               }
            )
         ;
      hiU.out.println("-------- check for friendLoop");
      db.in("friendLoop")
        .find()
        .forEach("{#friends:friends}"
                ,Fi->{
            Fi.in("famiryTree")
              .find("{person_id:{$in:#friends}}")
              .forRecursive(
                  "{#THIS.father:person_id,#THIS.mother:person_id}"
                 ,"{#status:status,#name:name}"
                 ,Fr->{
                     if( "KING".equals(Fr.getValue("#status")) ) {
                        return "' is a descendant of king "+Fr.getValue("#name")+"'";
                        }
                     return null;// さらに検索
                     }
                 ,Ff->{
                     hiU.out.println(Ff.getString("#TOP.person_id")+Ff.getString("#RESULT"));
                     }
                 ,Fn->{
                     hiU.out.println(Fn.getString("#TOP.person_id")+" not found");
                     }
                  )
               ;
            })
         ;
      //throw new hiException("IT'S OK");
      }
   }

